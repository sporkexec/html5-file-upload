<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<title>HTML5 AJAX File Upload Control</title>
	<style type="text/css">
		body.uploading {
			background: url("ajax-loader.gif") no-repeat fixed right top transparent;
		}

		#dropbox {
			border: 5px solid #ddd;
			background-color: #ddd;
			height: 200px;
			width: 200px;
			-moz-border-radius: 10px;
			-webkit-border-radius: 10px;
		}

		.dragging #dropbox {
			border: 5px inset #ccc;
		}

		/*
		 * File input box hack that makes a button.
		 * The container and input should stay mostly like this because getting
		 * everything positioned correctly is somewhat tricky.
		 * The label element can do anything, the container will resize to fit.
		 */

		#file_container {
			position: relative;
			display: inline-block;
			overflow: hidden;
		}

		#file_container input {
			position: absolute;
			top: -100%;
			height: 200%;
			padding: 0;
			margin: 0;
			opacity: 0;
			cursor: pointer; /* Won't work in Fx 3.6 */
		}

		#file_container label {
			display: block;
			padding: 1em 3em;
			font-weight: bold;
			color: #333;
			background-color: #f8f8f8;
			border: 1px solid #e0e0e0;
			-moz-border-radius: 4px;
			-webkit-border-radius: 4px;
			border-radius: 4px;
		}

		#file_container:hover label {
			color: #000;
			border: 1px solid #bbb;
		}

		#file_container:active label {
			box-shadow: 1px 1px 0px #e0e0e0 inset;
			border-color: #aaa #fff #fff #aaa;
		}
	</style>
	<script type="text/javascript">
		//Log function to be called with html5-fileupload plugin.
		window.log = function (s) {
			try {
				console.log.apply(this, arguments);
			} catch (e) {
				try {
					// .apply() won't work in Chrome
					console.log(s);
				} catch (e) {
				}
			}
		};
	</script>
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.3/jquery.min.js"></script>
	<script type="text/javascript" src="jquery.html5-fileupload.js"></script>
	<script type="text/javascript">
		$(function() {
			// Detector demo
			if (!$.fileUploadSupported)
				$('#detector').text('This browser is NOT supported.');
			else
				$('#detector').text('This browser is supported.');

			// Detector demo
			if (!$.imageUploadSupported)
				$('#image-detector').text('This browser DOES NOT supports image resizing and uploading.');
			else
				$('#image-detector').text('This browser supports image resizing and uploading.');

			// Enable plug-in
			$('.file-upload, #dropbox').fileUpload({
				url: 'upload.json.php',
				type: 'POST',
				dataType: 'json',
				beforeSend: function() {
					$(document.body).addClass('uploading');
				},
				complete: function() {
					$(document.body).removeClass('uploading');
				},
				success: function(result, status, xhr) {
					if (!result)
						window.alert('Server error.');
					else if (result.error !== 0)
						window.alert(result.error);
					else
						window.alert("Success! You have sent a file named '" + result.name + "' with MIME type '" + result.type + "'.");
				}
			});

			// Enable image upload plugin
			$('.image-upload').fileUpload({
				url: 'upload.json.php',
				type: 'POST',
				dataType: 'json',
				imageMaxHeight: 200,
				imageMaxWidth: 300,
				//allowUploadOriginalImage: true,  // Webkit browsers need one of these two settings to work.
				allowDataInBase64: true,           // (Fallback to original file, or send the resized in base64)
				forceResize: false,
				beforeSend: function () {
					$(document.body).addClass('uploading');
				},
				complete: function () {
					$(document.body).removeClass('uploading');
				},
				success: function (result, status, xhr) {
					if (!result)
						window.alert('Server error.');
					else if (result.error !== 0)
						window.alert(result.error);
					else
						window.alert("Success! You have sent a file named '" + result.name + "' with MIME type '" + result.type + "'.");
				}
			});

			// Provide page-wide dragover interaction
			$(document.body).bind('dragenter', function() {
				$(this).addClass('dragging');
			}).bind( 'dragleave', function() {
				$(this).removeClass('dragging');
			});
		});
	</script>
</head>
<body>
	<h1>HTML5 AJAX File Upload</h1>
	<p>For Firefox 3, Chrome 5, Safari 5 and higher</p>
	<p><a href="jquery.html5-fileupload.js">Source (jQuery Plug-in)</a></p>

	<h2>Demo</h2>

	<h3>Detector</h3>
	<p id="detector">&nbsp;</p>
	<p id="image-detector">&nbsp;</p>

	<h3>Click-and-send button</h3>
	<form action="upload.json.php" method="post" enctype="multipart/form-data">
	<p><input class="file-upload" type="file" name="Filedata" /></p>
	</form>

	<h3>Click-and-send button (w/ CSS hack)</h3>
	<form action="upload.json.php" method="post" enctype="multipart/form-data">
	<p id="file_container">
		<label for="upload-button">Click to upload or Drop a file</label>
		<input id="upload-button" class="file-upload" type="file" name="Filedata" />
	</p>
	</form>

	<h3>Simple file drop zone</h3>
	<div id="dropbox"></div>

	<h3>Image resizing and uploading</h3>
	<form action="upload.json.php" method="post" enctype="multipart/form-data">
	<p><input class="image-upload" type="file" name="Filedata" /></p>
	</form>

	<h3>One more thing ...</h3>
	<p>All inputs (not just the labelled drop zone) can also receive a file by dropping.</p>
</body>
</html>
